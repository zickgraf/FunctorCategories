#! @Chapter Precompilation

#! @Section Precompiling the category of skeletal finite sets

#! @Example

LoadPackage( "FunctorCategories", false );
#! true

QQ := HomalgFieldOfRationals( );;
snake_quiver := RightQuiver( "q(4)[a:1->2,b:2->3,c:3->4]" );;
A := QQ[FreeCategory( snake_quiver )];;
A_bar := A / [ A.abc ];;

ReadPackage( "LinearAlgebraForCAP", "gap/CompilerLogic.gi" );
#! true

ReadPackage( "Algebroids", "gap/CompilerLogic.gi" );
#! true

ReadPackage( "FunctorCategories", "gap/CompilerLogic.gi" );
#! true

category_constructor := A -> FunctorCategory( A, MATRIX_CATEGORY( CommutativeRingOfLinearCategory( A ) : FinalizeCategory := true ) );;

precompile_FunctorCategoryInMatrixCategory :=
  function( A, compiled_category_name )
    CapJitPrecompileCategoryAndCompareResult(
            category_constructor,
            [ A ],
            "FunctorCategories",
            compiled_category_name
            : operations :=
            Difference( ListPrimitivelyInstalledOperationsOfCategory( category_constructor( A : no_precompiled_code := true ) ),
                    [ "IsZeroForObjects",
                      "IsZeroForMorphisms",
                      "IsEpimorphism",
                      "IsMonomorphism",
                      "IsIsomorphism",
                      "IsEqualForMorphisms",
                      "IsWellDefinedForObjects",
                      "IsProjective",
                      "IsInjective",
                      "EpimorphismFromSomeProjectiveObject",
                      "MonomorphismIntoSomeInjectiveObject",
                      "ProjectiveLift",
                      "InjectiveColift",
                      ] ) ); end;;

precompile_FunctorCategoryInMatrixCategory( A, "FunctorCategoryOfFreeAlgebroidInMatrixCategoryPrecompiled" );

precompile_FunctorCategoryInMatrixCategory( A_bar, "FunctorCategoryOfAlgebroidWithRelationsInMatrixCategoryPrecompiled" );

FunctorCategoryOfFreeAlgebroidInMatrixCategoryPrecompiled( A );
#! FunctorCategory( Algebroid freely generated by the right quiver
#! q(4)[a:1->2,b:2->3,c:3->4] -> Category of matrices over Q )

cat := FunctorCategoryOfAlgebroidWithRelationsInMatrixCategoryPrecompiled( A_bar );
#! FunctorCategory( Algebroid generated by the right quiver
#! q(4)[a:1->2,b:2->3,c:3->4] -> Category of matrices over Q )

# Now we check whether the compiled code is loaded automatically.
# For this we use the name of the argument of `InitialObject`;
# for non-compiled code it is "cat", while for compiled code it is "cat_1":
argument_name := NamesLocalVariablesFunction(
    Last( cat!.added_functions.ZeroObject )[1] )[1];;

(ValueOption( "no_precompiled_code" ) = true and argument_name = "cat") or
    (ValueOption( "no_precompiled_code" ) = fail and argument_name = "cat_1");
#! true

#! @EndExample
